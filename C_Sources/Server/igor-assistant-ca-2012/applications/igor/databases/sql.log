timestamp: 2012-07-29T22:46:29.910000
CREATE TABLE auth_user(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name CHAR(128),
    last_name CHAR(128),
    email CHAR(512),
    password CHAR(512),
    registration_key CHAR(512),
    reset_password_key CHAR(512),
    registration_id CHAR(512)
);
timestamp: 2012-07-29T22:49:08.187000
CREATE TABLE auth_user(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name CHAR(128),
    last_name CHAR(128),
    email CHAR(512),
    password CHAR(512),
    registration_key CHAR(512),
    reset_password_key CHAR(512),
    registration_id CHAR(512)
);
timestamp: 2012-07-29T22:49:21.649000
CREATE TABLE auth_user(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name CHAR(128),
    last_name CHAR(128),
    email CHAR(512),
    password CHAR(512),
    registration_key CHAR(512),
    reset_password_key CHAR(512),
    registration_id CHAR(512)
);
success!
timestamp: 2012-07-29T22:49:21.694000
CREATE TABLE auth_group(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    role CHAR(512),
    description TEXT
);
success!
timestamp: 2012-07-29T22:49:21.727000
CREATE TABLE auth_membership(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group(id) ON DELETE CASCADE
);
success!
timestamp: 2012-07-29T22:49:22.291000
CREATE TABLE auth_permission(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    group_id INTEGER REFERENCES auth_group(id) ON DELETE CASCADE,
    name CHAR(512),
    table_name CHAR(512),
    record_id INTEGER
);
success!
timestamp: 2012-07-29T22:49:22.369000
CREATE TABLE auth_event(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    time_stamp TIMESTAMP,
    client_ip CHAR(512),
    user_id INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    origin CHAR(512),
    description TEXT
);
success!
timestamp: 2012-07-29T22:49:22.417000
CREATE TABLE auth_cas(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    service CHAR(512),
    ticket CHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2012-07-29T22:49:22.461000
CREATE TABLE user(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name CHAR(512),
    class_group CHAR(512),
    student_code CHAR(512),
    user_course INTEGER,
    avatar CHAR(512),
    auth INTEGER REFERENCES auth_user(id) ON DELETE CASCADE
);
success!
timestamp: 2012-07-29T22:49:22.590000
CREATE TABLE subject(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name CHAR(50) NOT NULL,
    note TEXT,
    subject_code CHAR(20)
);
success!
timestamp: 2012-07-29T22:49:22.623000
CREATE TABLE class_subject(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    subject INTEGER REFERENCES subject(id) ON DELETE CASCADE,
    location CHAR(512),
    duration INTEGER,
    is_finished CHAR(1),
    term INTEGER,
    teacher CHAR(512),
    class_code CHAR(20)
);
success!
timestamp: 2012-07-29T22:49:22.656000
CREATE TABLE class_scheduler(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    class_subject INTEGER REFERENCES class_subject(id) ON DELETE CASCADE,
    day_of_week INTEGER,
    period CHAR(512),
    location CHAR(512)
);
success!
timestamp: 2012-07-29T22:49:22.696000
CREATE TABLE scheduler(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    owner INTEGER,
    class_subject INTEGER REFERENCES class_subject(id) ON DELETE CASCADE,
    term INTEGER
);
success!
timestamp: 2012-07-29T22:49:22.738000
CREATE TABLE notification(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    notification_class INTEGER,
    owner INTEGER,
    user_share INTEGER,
    is_read CHAR(1),
    type INTEGER,
    date INTEGER,
    is_completed CHAR(1)
);
success!
timestamp: 2012-07-29T22:49:22.774000
CREATE TABLE test(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    class_subject INTEGER REFERENCES class_subject(id) ON DELETE CASCADE,
    test_type INTEGER,
    time INTEGER,
    location CHAR(512),
    project_due_date INTEGER
);
success!
timestamp: 2012-07-29T22:49:22.814000
CREATE TABLE project_member(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    class_subject INTEGER REFERENCES class_subject(id) ON DELETE CASCADE,
    user INTEGER,
    note TEXT
);
success!
timestamp: 2012-07-29T22:49:22.868000
CREATE TABLE job(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name CHAR(50) NOT NULL,
    status INTEGER,
    start_time INTEGER,
    end_time INTEGER,
    job_type INTEGER,
    class_subject INTEGER REFERENCES class_subject(id) ON DELETE CASCADE,
    date INTEGER,
    repeat_date CHAR(512),
    owner INTEGER,
    note TEXT,
    location CHAR(512),
    test INTEGER
);
success!
timestamp: 2012-07-30T10:29:08.242000
ALTER TABLE notification ADD job_id INTEGER REFERENCES job(id) ON DELETE CASCADE;
